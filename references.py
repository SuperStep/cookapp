from sqlalchemy import Column, Integer, String, DateTimefrom sqlalchemy.ext.declarative import declarative_basefrom sqlalchemy import ForeignKeyfrom sqlalchemy.orm import relationshipBase = declarative_base()class Ingredient(Base):    __tablename__ = 'Ingredients'    id = Column(Integer, primary_key=True)    name = Column(String)    name_scientific = Column(String)    description = Column(String)    food_group = Column(String)    food_subgroup = Column(String)    food_type = Column(String)    ncbi_taxonomy_id = Column(String)    def __repr__(self):        return "<Ingredient(name='%s')>" % (self.name)class RecipieIngredients(Base):    __tablename__ = 'RecipieIngredients'    id = Column(Integer, primary_key=True)    recipie_id = Column(Integer, ForeignKey('Recipies.id'))    recipie = relationship("Recipie", back_populates="ingredients")    ingredient_id = Column(Integer, ForeignKey("Ingredients.id"))    ingredient = relationship(Ingredient)    def __repr__(self):        return "<RecipieIngredients(recipie_id='%s', ingredient_id='%s')>" % (self.recipie_id, self.ingredient_id)class Recipie(Base):    __tablename__ = 'Recipies'    id = Column(Integer, primary_key=True)    name = Column(String)    description = Column(String)    last_cooked = Column(DateTime)    ingredients = relationship(        "RecipieIngredients",        order_by=RecipieIngredients.id, back_populates="recipie")    def __repr__(self):        return "<Recipie(name='%s')>" % (self.name)
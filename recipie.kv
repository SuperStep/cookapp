#:kivy 1.10.1
#:import Factory kivy.factory.Factory

#:import Toolbar kivymd.toolbar.Toolbar
#:import ThemeManager kivymd.theming.ThemeManager
#:import MDNavigationDrawer kivymd.navigationdrawer.MDNavigationDrawer
#:import NavigationLayout kivymd.navigationdrawer.NavigationLayout
#:import NavigationDrawerDivider kivymd.navigationdrawer.NavigationDrawerDivider
#:import NavigationDrawerToolbar kivymd.navigationdrawer.NavigationDrawerToolbar
#:import NavigationDrawerSubheader kivymd.navigationdrawer.NavigationDrawerSubheader
#:import MDCheckbox kivymd.selectioncontrols.MDCheckbox
#:import MDSwitch kivymd.selectioncontrols.MDSwitch
#:import MDList kivymd.list.MDList
#:import OneLineListItem kivymd.list.OneLineListItem
#:import TwoLineListItem kivymd.list.TwoLineListItem
#:import ThreeLineListItem kivymd.list.ThreeLineListItem
#:import OneLineAvatarListItem kivymd.list.OneLineAvatarListItem
#:import OneLineIconListItem kivymd.list.OneLineIconListItem
#:import OneLineAvatarIconListItem kivymd.list.OneLineAvatarIconListItem
#:import MDTextField kivymd.textfields.MDTextField
#:import MDSpinner kivymd.spinner.MDSpinner
#:import MDCard kivymd.card.MDCard
#:import MDSeparator kivymd.card.MDSeparator
#:import MDDropdownMenu kivymd.menu.MDDropdownMenu
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import colors kivymd.color_definitions.colors
#:import SmartTile kivymd.grid.SmartTile
#:import MDSlider kivymd.slider.MDSlider
#:import MDTabbedPanel kivymd.tabs.MDTabbedPanel
#:import MDTab kivymd.tabs.MDTab
#:import MDProgressBar kivymd.progressbar.MDProgressBar
#:import MDAccordion kivymd.accordion.MDAccordion
#:import MDAccordionItem kivymd.accordion.MDAccordionItem
#:import MDAccordionSubItem kivymd.accordion.MDAccordionSubItem
#:import MDThemePicker kivymd.theme_picker.MDThemePicker
#:import MDBottomNavigation kivymd.tabs.MDBottomNavigation
#:import MDBottomNavigationItem kivymd.tabs.MDBottomNavigationItem
#:import TwoLineAvatarListItem kivymd.list

NavigationLayout:
    id: nav_layout
    MDNavigationDrawer:
        id: nav_drawer
        NavigationDrawerToolbar:
            title: "Navigation Drawer"
        NavigationDrawerIconButton:
            icon: 'checkbox-blank-circle'
            text: "Recipies"
            on_release: app.root.ids.scr_mngr.current = 'recipies'
    BoxLayout:
        id: layout
        orientation: 'vertical'
        Toolbar:
            id: toolbar
            title: 'Recepies APP'
            md_bg_color: app.theme_cls.primary_color
            background_palette: 'Primary'
            background_hue: '500'
            left_action_items: [['menu', lambda x: app.root.toggle_nav_drawer()]]
            right_action_items: [['dots-vertical', lambda x: app.root.toggle_nav_drawer()]]
        ScreenManager:
            id: scr_mngr

<Recipies>:
    BoxLayout:
        orientation: 'vertical'
        Toolbar:
            title: "Toolbar with right buttons"
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            md_bg_color: get_color_from_hex(colors['Amber']['700'])
            background_palette: 'Amber'
            background_hue: '700'
            right_action_items: [['plus', lambda x: app.add_recipie()]]
        RecycleView:
            data: root.data_for_widgets
            viewclass: 'RecipieListItem'
            RecycleBoxLayout:
                default_size: None, dp(56)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                spacing: dp(2)
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            size_hint_x: 1
            height: '48dp'
            padding: '5dp'
            canvas:
                Color:
                    rgb: .3, .3, .3
                Rectangle:
                    pos: self.pos
                    size: self.size
            Button:
                text : root.FilterText()
                #on_release: app.PickRecipie(self)

<RecipieListItem>:
    type: "two-line"
    text: root.prop_name
    secondary_text: str(root.prop_id)
    on_release: app.edit_recipie(root.prop_index)
    AvatarSampleWidget:
        source: './assets/avatar.png'

<RecipieView>:
    on_prop_description: app.set_recipie_description(self.prop_id, self.prop_description)
    on_prop_name: app.set_recipie_title(self.prop_id, self.prop_name)
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: '48dp'
            padding: '5dp'
            canvas:
                Color:
                    rgb: .3, .3, .3
                Rectangle:
                    pos: self.pos
                    size: self.size
            Button:
                text: '<'
                size_hint_x: None
                width: self.height
                on_release: app.go_recipies(root)
            MutableLabelTextInput:
                text: root.prop_name
                font_size: '16sp'
                multiline: False
                on_text: root.prop_name = self.text
            Button:
                text: 'X'
                size_hint_x: None
                width: self.height
                on_release: app.del_recipie(root.prop_id)
        MutableRstDocumentTextInput:
            size_hint_y:0.3
            text: root.prop_description
            on_text: root.prop_description = self.text
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y:0.2
            Label:
                size_hint_x:0.6
                text: 'Coocked last time: ' + root.timestamp_to_datetime(root.prop_last_cooked)
            Button:
                size_hint_x:0.4
                text: 'Cook!'
                on_release: root.set_time()
        Toolbar:
            title: " "
            pos_hint: {'center_x': 0.5, 'center_y': 0.20}
            md_bg_color: get_color_from_hex(colors['DeepPurple']['A400'])
            background_palette: 'Blue'
            background_hue: 'A400'
            right_action_items: [['plus', lambda x: root.add_ingredient()]]
        RecycleView:
            data: root.ingredients_data
            viewclass: 'IngredientListItem'
            RecycleBoxLayout:
                default_size: None, dp(56)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                spacing: dp(2)

<TreeViewLabel>:
    height: '48sp'
    size_hint_y: None
    canvas:
        Color:
            rgb: .3, .3, .3
        Rectangle:
            pos: self.pos
            size: self.width, 1

<IngredientListPopupItem>:
    height: '48sp'
    size_hint_y: None
    canvas:
        Color:
            rgb: .3, .3, .3
        Rectangle:
            pos: self.pos
            size: self.width, 1
    BoxLayout:
        padding: '5dp'
        Label:
            text: root.name
            font_size: '16sp'
            multiline: False
        Button:
            text: 'Info'
            font_size: '16sp'
            on_release: root.show_info()

<IngredientInfo>:
    canvas:
        Color:
            rgb: .3, .3, .3
        Rectangle:
            pos: self.pos
            size: self.width, 1
    BoxLayout:
        orientation: 'vertical'
        size_hint_y: 0.8
        halign:'middle'
        valign:'middle'
        Label:
            size_hint_y: 0.1
            text: root.name
        Label:
            size_hint_y: 0.1
            text: root.name_scientific
        Label:
            size_hint_y: 0.7
            text: root.description
            multiline: True
        Button:
            size_hint_y: 0.1
            text: 'Close'
            on_release: root.close()

<IngredientListItem>:
    text: root.prop_name
    secondary_text: root.prop_name
    IconLeftSampleWidget:

    #Button:
    #    text: 'x'
    #   size_hint_x: None
    #    width: self.height
    #    on_release: root.del_ingredient()

<MutableLabelTextInput@MutableTextInput>:
    Label:
        id: w_label
        pos: root.pos
        text: root.text

    TextInput:
        id: w_textinput
        pos: root.pos
        text: root.text
        multiline: root.multiline
        on_focus: root.check_focus_and_view(self)

<MutableRstDocumentTextInput@MutableTextInput>:
    RstDocument:
        id: w_label
        pos: root.pos
        text: root.text

    TextInput:
        id: w_textinput
        pos: root.pos
        text: root.text
        multiline: root.multiline
        on_focus: root.check_focus_and_view(self)

<ProgressScreen>:
    name: 'progress'
    MDSpinner:
        id: spinner
        size_hint: None, None
        size: dp(46), dp(46)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        active: True